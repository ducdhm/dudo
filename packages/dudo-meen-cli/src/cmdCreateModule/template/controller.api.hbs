const { {{ namePascal }}Model } = require('@local/models');

module.exports = (app, config) => {
    const { LOCALE } = app;
    const logger = app.logger('controller/{{ name }}');
    const controller = {};

    controller.resolver = app.initResolver({{ namePascal }}Model, '{{ name }}');

    controller.show{{ namePascal }}List = async (req, res, next) => {
        logger.info('show{{ namePascal }}List');

        try {
            const {{ name }}List = await {{ namePascal }}Model.find();
            logger.info('=> %s {{ name }}(s)', {{ name }}List.length);

            res.json({
                status: true,
                data: {{ name }}List,
            });
        } catch (err) {
            return next(err);
        }
    };

    controller.show{{ namePascal }}Details = async (req, res, next) => {
        const id = req.params.id;
        logger.info('show{{ namePascal }}Details: %s', id);

        try {
            const {{ name }} = id === 'new' ? null : req.{{ name }};

            res.json({
                status: true,
                data: {{ name }},
            });
        } catch (err) {
            next(err);
        }
    };

    controller.save{{ namePascal }} = async (req, res, next) => {
        logger.info('save{{ namePascal }}: %s', req.params.id);

        try {
            const {{ name }} = req.{{ name }};
            {{ name }}.name = req.body.name;
            await {{ name }}.save();

            return res.json({
                status: true,
            });
        } catch (error) {
            return next(error);
        }
    };

    controller.delete{{ namePascal }} = async (req, res, next) => {
        logger.info('delete{{ namePascal }}: %s', req.params.id);

        try {
            await req.{{ name }}.delete();

            return res.json({
                status: true,
            });
        } catch (error) {
            return next(error);
        }
    };

    return controller;
};
